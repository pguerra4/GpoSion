// <auto-generated />
using System;
using GpoSion.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GpoSion.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211102021107_makeDisparosMoldeadoraNullable")]
    partial class makeDisparosMoldeadoraNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GpoSion.API.Models.AjusteInventarioProducto", b =>
                {
                    b.Property<int>("AjusteInventarioProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ExistenciaFinal")
                        .HasColumnType("int");

                    b.Property<int>("ExistenciaOriginal")
                        .HasColumnType("int");

                    b.Property<int?>("ExistenciaProductoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AjusteInventarioProductoId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ExistenciaProductoId");

                    b.HasIndex("LocalidadId", "NoParte");

                    b.ToTable("AjustesInventarioProductos");
                });

            modelBuilder.Entity("GpoSion.API.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreArea")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Area");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("GpoSion.API.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cliente");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ClienteId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GpoSion.API.Models.Comprador", b =>
                {
                    b.Property<int>("CompradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompradorId");

                    b.ToTable("Compradores");
                });

            modelBuilder.Entity("GpoSion.API.Models.DetalleEmbarque", b =>
                {
                    b.Property<int>("DetalleEmbarqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cajas")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmbarqueId")
                        .HasColumnType("int");

                    b.Property<int>("Entregadas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("NoOrden")
                        .HasColumnType("bigint");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PiezasXCaja")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("DetalleEmbarqueId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("EmbarqueId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoOrden");

                    b.HasIndex("NoParte");

                    b.ToTable("DetallesEmbarque");
                });

            modelBuilder.Entity("GpoSion.API.Models.DetalleRecibo", b =>
                {
                    b.Property<int>("DetalleReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadPorCaja")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoLote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReciboId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenciaCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("TotalCajas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.Property<int?>("ViajeroId")
                        .HasColumnType("int");

                    b.HasKey("DetalleReciboId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("ReciboId");

                    b.HasIndex("UnidadMedidaId");

                    b.HasIndex("ViajeroId");

                    b.ToTable("DetalleRecibos");
                });

            modelBuilder.Entity("GpoSion.API.Models.Embarque", b =>
                {
                    b.Property<int>("EmbarqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Elaboro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<string>("LENo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Rechazadas")
                        .HasColumnType("bit");

                    b.Property<string>("Recibio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("EmbarqueId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Embarques");
                });

            modelBuilder.Entity("GpoSion.API.Models.EstatusMolde", b =>
                {
                    b.Property<int>("EstatusMoldeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("EstatusMoldeId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("EstatusMolde");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaMaterial", b =>
                {
                    b.Property<int>("ExistenciaMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Existencia")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ExistenciaMaterialId");

                    b.HasIndex("AreaId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("ExistenciasMaterial");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaProducto", b =>
                {
                    b.Property<int>("ExistenciaProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PiezasCertificadas")
                        .HasColumnType("int");

                    b.Property<int>("PiezasRechazadas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ExistenciaProductoId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoParte");

                    b.ToTable("ExistenciasProducto");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaProductoProduccion", b =>
                {
                    b.Property<int>("ExistenciaProductoProduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PiezasCertificadas")
                        .HasColumnType("int");

                    b.Property<int>("PiezasRechazadas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ExistenciaProductoProduccionId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoParte");

                    b.ToTable("ExistenciasProductoProduccion");
                });

            modelBuilder.Entity("GpoSion.API.Models.HistorialOrdenCompra", b =>
                {
                    b.Property<int>("HistorialOrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("NoOrden")
                        .HasColumnType("bigint");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenCompraDetalleId")
                        .HasColumnType("int");

                    b.HasKey("HistorialOrdenCompraId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("NoOrden");

                    b.HasIndex("OrdenCompraDetalleId");

                    b.ToTable("HistorialOrdenesCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.Localidad", b =>
                {
                    b.Property<int>("LocalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Localidad");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("LocalidadId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("GpoSion.API.Models.LocalidadMaterial", b =>
                {
                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Existencia")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("LocalidadId", "MaterialId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("LocalidadesMateriales");
                });

            modelBuilder.Entity("GpoSion.API.Models.LocalidadNumeroParte", b =>
                {
                    b.Property<int>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Existencia")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Rechazadas")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("LocalidadId", "NoParte");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoParte");

                    b.ToTable("LocalidadesNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveMaterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Material");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.HasAlternateKey("ClaveMaterial")
                        .HasName("AlternateKey_ClaveMaterial");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("TipoMaterialId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("GpoSion.API.Models.MaterialNumeroParte", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("MaterialId", "NoParte");

                    b.HasIndex("NoParte");

                    b.ToTable("MaterialesNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Mensaje", b =>
                {
                    b.Property<int>("MensajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLectura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MensajeId");

                    b.HasIndex("EmisorId");

                    b.HasIndex("ReceptorId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("GpoSion.API.Models.Molde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaveMolde")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Molde");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EstatusMoldeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("UbicacionAreaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("EstatusMoldeId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("UbicacionAreaId");

                    b.ToTable("Moldes");
                });

            modelBuilder.Entity("GpoSion.API.Models.MoldeNumeroParte", b =>
                {
                    b.Property<int>("MoldeId")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cavidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("MoldeId", "NoParte");

                    b.HasIndex("NoParte");

                    b.ToTable("MoldeNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Moldeadora", b =>
                {
                    b.Property<int>("MoldeadoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DisparosPorHora")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MoldeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UltimoMotivoParo")
                        .HasColumnType("int");

                    b.HasKey("MoldeadoraId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("MoldeId");

                    b.ToTable("Moldeadoras");
                });

            modelBuilder.Entity("GpoSion.API.Models.MoldeadoraNumeroParte", b =>
                {
                    b.Property<int>("MoldeadoraId")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MoldeadoraId", "NoParte");

                    b.HasIndex("NoParte");

                    b.ToTable("MoldeadoraNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.MotivoTiempoMuerto", b =>
                {
                    b.Property<int>("MotivoTiempoMuertoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("MotivoTiempoMuertoId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("MotivosTiempoMuerto");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMaterial", b =>
                {
                    b.Property<int>("MovimientoMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DestinoAreaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExistenciaFinal")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal?>("ExistenciaInicial")
                        .HasColumnType("decimal(18,3)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MotivoMovimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrigenAreaId")
                        .HasColumnType("int");

                    b.Property<int?>("ReciboId")
                        .HasColumnType("int");

                    b.Property<int?>("RequerimientoMaterialMaterialId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ViajeroId")
                        .HasColumnType("int");

                    b.HasKey("MovimientoMaterialId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("DestinoAreaId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("OrigenAreaId");

                    b.HasIndex("ReciboId");

                    b.HasIndex("RequerimientoMaterialMaterialId");

                    b.HasIndex("ViajeroId");

                    b.ToTable("MovimientosMaterial");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMolde", b =>
                {
                    b.Property<int>("MovimientoMoldeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EstatusMoldeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoldeId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovimientoMoldeId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("EstatusMoldeId");

                    b.HasIndex("MoldeId");

                    b.ToTable("MovimientosMoldes");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMoldeadora", b =>
                {
                    b.Property<int>("MovimientoMoldeadoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MoldeId")
                        .HasColumnType("int");

                    b.Property<int>("MoldeadoraId")
                        .HasColumnType("int");

                    b.Property<int?>("MotivoTiempoMuertoId")
                        .HasColumnType("int");

                    b.Property<string>("Movimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("MovimientoMoldeadoraId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("MoldeId");

                    b.HasIndex("MoldeadoraId");

                    b.HasIndex("MotivoTiempoMuertoId");

                    b.ToTable("MovimientosMoldeadora");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMoldeadoraNumeroParte", b =>
                {
                    b.Property<int>("MovimientoMoldeadoraId")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MovimientoMoldeadoraId", "NoParte");

                    b.HasIndex("NoParte");

                    b.ToTable("MovimientosMoldeadoraNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoProducto", b =>
                {
                    b.Property<int>("MovimientoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cajas")
                        .HasColumnType("int");

                    b.Property<decimal?>("Colada")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DetalleEmbarqueId")
                        .HasColumnType("int");

                    b.Property<int?>("ExistenciaAlmacenFinal")
                        .HasColumnType("int");

                    b.Property<int?>("ExistenciaAlmacenInicial")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PiezasCertificadas")
                        .HasColumnType("int");

                    b.Property<int>("PiezasRechazadas")
                        .HasColumnType("int");

                    b.Property<int>("PiezasXCaja")
                        .HasColumnType("int");

                    b.Property<decimal?>("Purga")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TipoMovimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("MovimientoProductoId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("DetalleEmbarqueId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoParte");

                    b.ToTable("MovimientosProducto");
                });

            modelBuilder.Entity("GpoSion.API.Models.NumeroParte", b =>
                {
                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeyendaPieza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImagenPieza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoParte");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("NumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompra", b =>
                {
                    b.Property<long>("NoOrden")
                        .HasColumnType("bigint");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("NoOrden");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("OrdenesCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("NoOrden")
                        .HasColumnType("bigint");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PiezasAutorizadas")
                        .HasColumnType("int");

                    b.Property<int>("PiezasSurtidas")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoOrden");

                    b.HasIndex("NoParte");

                    b.ToTable("OrdenCompraDetalles");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraProveedor", b =>
                {
                    b.Property<string>("NoOrden")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AreaProyecto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonaSolicita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("RazonCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("NoOrden");

                    b.HasIndex("CompradorId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("OrdenesCompraProveedores");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraProveedorDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoOrden")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoOrden");

                    b.ToTable("OrdenCompraProveedorDetalles");
                });

            modelBuilder.Entity("GpoSion.API.Models.Parametro", b =>
                {
                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Clave");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("GpoSion.API.Models.PlaneacionProduccion", b =>
                {
                    b.Property<int>("año")
                        .HasColumnType("int");

                    b.Property<int>("semana")
                        .HasColumnType("int");

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("año", "semana", "NoParte");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NoParte");

                    b.ToTable("PlaneacionProduccion");
                });

            modelBuilder.Entity("GpoSion.API.Models.Produccion", b =>
                {
                    b.Property<int>("ProduccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Colada")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MoldeadoraId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Purga")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ProduccionId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("MoldeadoraId");

                    b.ToTable("Produccion");
                });

            modelBuilder.Entity("GpoSion.API.Models.ProduccionNumeroParte", b =>
                {
                    b.Property<int>("ProduccionNumeroParteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NoParte")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Piezas")
                        .HasColumnType("int");

                    b.Property<int>("ProduccionId")
                        .HasColumnType("int");

                    b.Property<int>("Scrap")
                        .HasColumnType("int");

                    b.HasKey("ProduccionNumeroParteId");

                    b.HasIndex("NoParte");

                    b.HasIndex("ProduccionId");

                    b.ToTable("ProduccionNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CondicionesCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ProveedorId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GpoSion.API.Models.Recibo", b =>
                {
                    b.Property<int>("ReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacturaAduanal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoLote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoRecibo")
                        .HasColumnType("int");

                    b.Property<string>("PedimentoImportacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Recibio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transportista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ReciboId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("GpoSion.API.Models.RequerimientoMaterial", b =>
                {
                    b.Property<int>("RequerimientoMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fechaentrega")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("JefaLinea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Recibio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TurnoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("RequerimientoMaterialId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("TurnoId");

                    b.ToTable("RequerimientosMaterial");
                });

            modelBuilder.Entity("GpoSion.API.Models.RequerimientoMaterialMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("CantidadEntregada")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("Estatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("RequerimientoMaterialId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.Property<int?>("ViajeroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RequerimientoMaterialId");

                    b.HasIndex("UnidadMedidaId");

                    b.HasIndex("ViajeroId");

                    b.ToTable("RequerimientoMaterialMateriales");
                });

            modelBuilder.Entity("GpoSion.API.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("GpoSion.API.Models.TipoMaterial", b =>
                {
                    b.Property<int>("TipoMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("TipoMaterialId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("TiposMaterial");
                });

            modelBuilder.Entity("GpoSion.API.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NoTurno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("TurnoId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("GpoSion.API.Models.UnidadMedida", b =>
                {
                    b.Property<int>("UnidadMedidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnidadMedidaId");

                    b.ToTable("UnidadesMedida");
                });

            modelBuilder.Entity("GpoSion.API.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Materno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("ModificadoPorId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GpoSion.API.Models.Viajero", b =>
                {
                    b.Property<int>("ViajeroId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Existencia")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("ExistenciaProduccion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("ViajeroId");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Viajeros");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GpoSion.API.Models.AjusteInventarioProducto", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.ExistenciaProducto", "ExistenciaProducto")
                        .WithMany()
                        .HasForeignKey("ExistenciaProductoId");

                    b.HasOne("GpoSion.API.Models.LocalidadNumeroParte", "LocalidadNumeroParte")
                        .WithMany("AjustesInventarioProducto")
                        .HasForeignKey("LocalidadId", "NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("ExistenciaProducto");

                    b.Navigation("LocalidadNumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Cliente", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.DetalleEmbarque", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Embarque", "Embarque")
                        .WithMany("DetallesEmbarque")
                        .HasForeignKey("EmbarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.OrdenCompra", "OrdenCompra")
                        .WithMany()
                        .HasForeignKey("NoOrden");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany()
                        .HasForeignKey("NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("Embarque");

                    b.Navigation("Localidad");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.DetalleRecibo", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Recibo", "Recibo")
                        .WithMany("Detalle")
                        .HasForeignKey("ReciboId");

                    b.HasOne("GpoSion.API.Models.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");

                    b.HasOne("GpoSion.API.Models.Viajero", "Viajero")
                        .WithMany()
                        .HasForeignKey("ViajeroId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Localidad");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Recibo");

                    b.Navigation("UnidadMedida");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("GpoSion.API.Models.Embarque", b =>
                {
                    b.HasOne("GpoSion.API.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("Cliente");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.EstatusMolde", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("Area");

                    b.Navigation("CreadoPor");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaProducto", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("ExistenciasProducto")
                        .HasForeignKey("NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.ExistenciaProductoProduccion", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("ExistenciasProductoProduccion")
                        .HasForeignKey("NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.HistorialOrdenCompra", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.OrdenCompra", "OrdenCompra")
                        .WithMany("Historial")
                        .HasForeignKey("NoOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.OrdenCompraDetalle", "DetalleOrdenCompra")
                        .WithMany("Historial")
                        .HasForeignKey("OrdenCompraDetalleId");

                    b.Navigation("CreadoPor");

                    b.Navigation("DetalleOrdenCompra");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.Localidad", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.LocalidadMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany("MaterialesLocalidad")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany("MaterialLocalidades")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Localidad");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.LocalidadNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany("NumerosParteLocalidad")
                        .HasForeignKey("LocalidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("NumeroParteLocalidades")
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreadoPor");

                    b.Navigation("Localidad");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Material", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.TipoMaterial", "TipoMaterial")
                        .WithMany()
                        .HasForeignKey("TipoMaterialId");

                    b.HasOne("GpoSion.API.Models.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("TipoMaterial");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("GpoSion.API.Models.MaterialNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany("MaterialNumerosParte")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("MaterialesNumeroParte")
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Mensaje", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "Emisor")
                        .WithMany()
                        .HasForeignKey("EmisorId");

                    b.HasOne("GpoSion.API.Models.User", "Receptor")
                        .WithMany()
                        .HasForeignKey("ReceptorId");

                    b.Navigation("Emisor");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("GpoSion.API.Models.Molde", b =>
                {
                    b.HasOne("GpoSion.API.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.EstatusMolde", "Estatus")
                        .WithMany()
                        .HasForeignKey("EstatusMoldeId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Area", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionAreaId");

                    b.Navigation("Cliente");

                    b.Navigation("CreadoPor");

                    b.Navigation("Estatus");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("GpoSion.API.Models.MoldeNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.Molde", "Molde")
                        .WithMany("MoldeNumerosParte")
                        .HasForeignKey("MoldeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("MoldesNumeroParte")
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Molde");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Moldeadora", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Molde", "Molde")
                        .WithMany()
                        .HasForeignKey("MoldeId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Molde");
                });

            modelBuilder.Entity("GpoSion.API.Models.MoldeadoraNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.Moldeadora", "Moldeadora")
                        .WithMany("MoldeadoraNumerosParte")
                        .HasForeignKey("MoldeadoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("MoldeadorasNumeroParte")
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Moldeadora");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.MotivoTiempoMuerto", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Area", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoAreaId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Area", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenAreaId");

                    b.HasOne("GpoSion.API.Models.Recibo", "Recibo")
                        .WithMany()
                        .HasForeignKey("ReciboId");

                    b.HasOne("GpoSion.API.Models.RequerimientoMaterialMaterial", "RequerimientoMaterialMaterial")
                        .WithMany()
                        .HasForeignKey("RequerimientoMaterialMaterialId");

                    b.HasOne("GpoSion.API.Models.Viajero", "Viajero")
                        .WithMany("MovimientosMaterial")
                        .HasForeignKey("ViajeroId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Destino");

                    b.Navigation("Localidad");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Origen");

                    b.Navigation("Recibo");

                    b.Navigation("RequerimientoMaterialMaterial");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMolde", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.EstatusMolde", "Estatus")
                        .WithMany()
                        .HasForeignKey("EstatusMoldeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.Molde", "Molde")
                        .WithMany("Movimientos")
                        .HasForeignKey("MoldeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreadoPor");

                    b.Navigation("Estatus");

                    b.Navigation("Molde");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMoldeadora", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Molde", "Molde")
                        .WithMany()
                        .HasForeignKey("MoldeId");

                    b.HasOne("GpoSion.API.Models.Moldeadora", "Moldeadora")
                        .WithMany("MovimientosMoldeadora")
                        .HasForeignKey("MoldeadoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.MotivoTiempoMuerto", "MotivoTiempoMuerto")
                        .WithMany()
                        .HasForeignKey("MotivoTiempoMuertoId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Molde");

                    b.Navigation("Moldeadora");

                    b.Navigation("MotivoTiempoMuerto");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMoldeadoraNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.MovimientoMoldeadora", "MovimientoMoldeadora")
                        .WithMany("MovimientoMoldeadoraNumerosParte")
                        .HasForeignKey("MovimientoMoldeadoraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("MovimientosMoldeadoraNumeroParte")
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MovimientoMoldeadora");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoProducto", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.DetalleEmbarque", "DetalleEmbarque")
                        .WithMany("Movimientos")
                        .HasForeignKey("DetalleEmbarqueId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany()
                        .HasForeignKey("NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("DetalleEmbarque");

                    b.Navigation("Localidad");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.NumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.Cliente", "Cliente")
                        .WithMany("NumerosParte")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("Cliente");

                    b.Navigation("CreadoPor");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompra", b =>
                {
                    b.HasOne("GpoSion.API.Models.Cliente", "Cliente")
                        .WithMany("OrdenesCompra")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("Cliente");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraDetalle", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.OrdenCompra", "OrdenCompra")
                        .WithMany("NumerosParte")
                        .HasForeignKey("NoOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany("OrdenesCompraDetalle")
                        .HasForeignKey("NoParte");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraProveedor", b =>
                {
                    b.HasOne("GpoSion.API.Models.Comprador", "Comprador")
                        .WithMany()
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraProveedorDetalle", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.OrdenCompraProveedor", "OrdenCompraProveedor")
                        .WithMany("Materiales")
                        .HasForeignKey("NoOrden");

                    b.Navigation("CreadoPor");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");

                    b.Navigation("OrdenCompraProveedor");
                });

            modelBuilder.Entity("GpoSion.API.Models.PlaneacionProduccion", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany()
                        .HasForeignKey("NoParte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("NumeroParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Produccion", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Moldeadora", "Moldeadora")
                        .WithMany()
                        .HasForeignKey("MoldeadoraId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Moldeadora");
                });

            modelBuilder.Entity("GpoSion.API.Models.ProduccionNumeroParte", b =>
                {
                    b.HasOne("GpoSion.API.Models.NumeroParte", "NumeroParte")
                        .WithMany()
                        .HasForeignKey("NoParte");

                    b.HasOne("GpoSion.API.Models.Produccion", "Produccion")
                        .WithMany("ProduccionNumerosParte")
                        .HasForeignKey("ProduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NumeroParte");

                    b.Navigation("Produccion");
                });

            modelBuilder.Entity("GpoSion.API.Models.Proveedor", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.Recibo", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Proveedor", "Proveedor")
                        .WithMany("Recibos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("GpoSion.API.Models.RequerimientoMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.HasOne("GpoSion.API.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("TurnoId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("GpoSion.API.Models.RequerimientoMaterialMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.RequerimientoMaterial", "Requerimiento")
                        .WithMany("Materiales")
                        .HasForeignKey("RequerimientoMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.Viajero", "Viajero")
                        .WithMany()
                        .HasForeignKey("ViajeroId");

                    b.Navigation("Material");

                    b.Navigation("Requerimiento");

                    b.Navigation("UnidadMedida");

                    b.Navigation("Viajero");
                });

            modelBuilder.Entity("GpoSion.API.Models.TipoMaterial", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.Turno", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.User", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("GpoSion.API.Models.Viajero", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("GpoSion.API.Models.Localidad", "Localizacion")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("GpoSion.API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");

                    b.Navigation("CreadoPor");

                    b.Navigation("Localizacion");

                    b.Navigation("Material");

                    b.Navigation("ModificadoPor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("GpoSion.API.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("GpoSion.API.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GpoSion.API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GpoSion.API.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GpoSion.API.Models.Cliente", b =>
                {
                    b.Navigation("NumerosParte");

                    b.Navigation("OrdenesCompra");
                });

            modelBuilder.Entity("GpoSion.API.Models.DetalleEmbarque", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GpoSion.API.Models.Embarque", b =>
                {
                    b.Navigation("DetallesEmbarque");
                });

            modelBuilder.Entity("GpoSion.API.Models.Localidad", b =>
                {
                    b.Navigation("MaterialesLocalidad");

                    b.Navigation("NumerosParteLocalidad");
                });

            modelBuilder.Entity("GpoSion.API.Models.LocalidadNumeroParte", b =>
                {
                    b.Navigation("AjustesInventarioProducto");
                });

            modelBuilder.Entity("GpoSion.API.Models.Material", b =>
                {
                    b.Navigation("MaterialLocalidades");

                    b.Navigation("MaterialNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Molde", b =>
                {
                    b.Navigation("MoldeNumerosParte");

                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GpoSion.API.Models.Moldeadora", b =>
                {
                    b.Navigation("MoldeadoraNumerosParte");

                    b.Navigation("MovimientosMoldeadora");
                });

            modelBuilder.Entity("GpoSion.API.Models.MovimientoMoldeadora", b =>
                {
                    b.Navigation("MovimientoMoldeadoraNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.NumeroParte", b =>
                {
                    b.Navigation("ExistenciasProducto");

                    b.Navigation("ExistenciasProductoProduccion");

                    b.Navigation("MaterialesNumeroParte");

                    b.Navigation("MoldeadorasNumeroParte");

                    b.Navigation("MoldesNumeroParte");

                    b.Navigation("MovimientosMoldeadoraNumeroParte");

                    b.Navigation("NumeroParteLocalidades");

                    b.Navigation("OrdenesCompraDetalle");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompra", b =>
                {
                    b.Navigation("Historial");

                    b.Navigation("NumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraDetalle", b =>
                {
                    b.Navigation("Historial");
                });

            modelBuilder.Entity("GpoSion.API.Models.OrdenCompraProveedor", b =>
                {
                    b.Navigation("Materiales");
                });

            modelBuilder.Entity("GpoSion.API.Models.Produccion", b =>
                {
                    b.Navigation("ProduccionNumerosParte");
                });

            modelBuilder.Entity("GpoSion.API.Models.Proveedor", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("GpoSion.API.Models.Recibo", b =>
                {
                    b.Navigation("Detalle");
                });

            modelBuilder.Entity("GpoSion.API.Models.RequerimientoMaterial", b =>
                {
                    b.Navigation("Materiales");
                });

            modelBuilder.Entity("GpoSion.API.Models.Viajero", b =>
                {
                    b.Navigation("MovimientosMaterial");
                });
#pragma warning restore 612, 618
        }
    }
}
